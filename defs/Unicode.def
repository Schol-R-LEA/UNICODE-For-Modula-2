(* Copyright (C) 2024 Alice Osako,
   based on code Copyright (C) 2010 The Free Software Foundation, Inc. *)
(*
UNICODE for Modula-2 is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as published
by the Free Software Foundation; either version 3, or (at your option)
any later version.

UNICODE for Modula-2 is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License along
with this package; see the file COPYING.  If not, write to the Free Software
Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. *)

(* This package is derived from an earlier incomplete package by Chris Lilley
   working for the Free Software Foundation in 2010. *)


DEFINITION MODULE Unicode ;

(*
    Title      : Unicode
    Authors    : Chris Lilley; Alice Osako
    System     : UNIX (GNU Modula-2)
    Date       : 2010-10-03 19:01:11
    Last edit  : $Date: 2024-03-07 19:20:40 $
    Revision   : $Version$
    Description: provides Unicode base types.
*)

CONST
   MaxUnicode = 10FFFFH;  (*maximum Unicode value *)
   Replacement = 0FFFDH;      (* Unicode REPLACEMENT CHARACTER *)

TYPE
    UNICHAR = CARDINAL [0 .. MaxUnicode];   (* a single Unicode character *)
    UCS4_codeunit = CARDINAL;               (* a single UCS-4 code unit  *)

(*
   UNICHAR can hold any Unicode character. It is not restricted to
   the Basic Multilinual Plane (BMP). Each Unicode character has
   a unique codepoint between 0 and MaxUnicode; this value is
   published by the Unicode consortium.
   A Unicode character also has a name, and a set of associated
   character properties.

   For the purposes of this program, 'UCS-n' shall refer to the internal
   representation of the Unicode characters, while 'UTF-n' shall refer to
   the specific UCS Transformation Format. Thus, while UCS-4 and UTF-32
   are in practice synonyms, they are referred to here as distinct concepts.

   UCS4_codeunit holds a single code unit as used in the UNICODE character
   Set, Four Byte Representation. A codeunit is either a character in
   the BMP, a Low Surrogate, or a High Surrogate.
*)

PROCEDURE IsUnicode(uc: UNICHAR): BOOLEAN;


PROCEDURE CharToUNICHAR (c: CHAR): UNICHAR;
(* 
   CharToUNICHAR -   converts a single char, c, into a Unicode character.
                   For GM2, a Modula-2 char is a gcc char which is 8 bits.
                   The character represented by a CHAR with an ordinal
                   value greater than 127 depends on the locale.
                   The size and encoding of a Modula-2 char is undefined
                   in both PIM and ISO Modula-2.
*)

PROCEDURE ASCIIToUNICHAR (a: CHAR): UNICHAR;
(* 
   ASCIIToUNICHAR -  converts a single ASCII printable char, a, into
                   a Unicode character in the Basic Latin block.
                   For GM2, a Modula-2 char is a gcc char which is 8 bits;
                   printable ASCII values take up the lower half of the
                   codespace in GM2.
                   If the ordinal value of a is outside the printable
                   ASCII range, the Unicode character
                   'REPLACEMENT CHARACTER' is returned.
                   The size and encoding of a Modula-2 char is undefined
                   in both PIM and ISO Modula-2.
*)

PROCEDURE CodepointToUNICHAR (cp: CARDINAL): UNICHAR;
(* 
   CodepointToUNICHAR -   converts a numeric codepoint, cp, into a
                   Unicode character. For example the cardinal 3608, which
                   has the hexadecimal representation 0E18H, would return
                   the Unicode character THAI CHARACTER THO THONG.
*)


PROCEDURE IsPrintableASCII (cu: UCS4_codeunit): BOOLEAN;
(*
   IsPrintableASCII -     returns true if the UCS4_codeunit, cu, corresponds to
                   an ASCII character. Otherwise returns false.
*)

PROCEDURE IsBMP (cu: UCS4_codeunit): BOOLEAN;
(*
   IsBMP -         returns true if the UCS4_codeunit, cu, corresponds to
                   a Basic Multilingual Plane (BMP) Unicode character.
                   Otherwise (cu is a low or high surrogate) returns false.
*)

PROCEDURE IsSurrogate (cu: UCS4_codeunit): BOOLEAN;
(*
   IsSurrogate -   returns true if the UCS4_codeunit, cu, corresponds to
                   a Surrogate Unicode character. Otherwise returns false.
*)


PROCEDURE BMPToUNICHAR (b: UCS4_codeunit): UNICHAR;
(*
   BMPToUNICHAR -    converts a single UCS4_codeunit within the BMP, b,
                   into a Unicode character. If b is not in the BMP
                   but is a low or high surrogate, the Unicode character
                   'REPLACEMENT CHARACTER' is returned.
*)


PROCEDURE SurrogatesToUNICHAR (low, high: UCS4_codeunit): UNICHAR;
(*
   SurrogatesToUNICHAR - converts a pair of surrogate characters, low and high,
                   into a Unicode character. If low is outside the range
                   for low surrogates and/or high is outside the range
                   for high surrogates, the Unicode character
                   'REPLACEMENT CHARACTER' is returned.
*)

PROCEDURE CodepointToString(cp: UCS4_codeunit; VAR str: ARRAY OF CHAR);

END Unicode.